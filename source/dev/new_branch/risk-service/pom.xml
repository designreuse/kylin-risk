<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.rkylin.risk</groupId>
    <artifactId>risk</artifactId>
    <version>1.3</version>
  </parent>
  <artifactId>risk-service</artifactId>
  <packaging>war</packaging>
  <name>risk::risk-service(external service )</name>
  <url>http://maven.apache.org</url>
  <properties>
    <risk-kie-server.version>1.2.4</risk-kie-server.version>
    <oprsystem.version>1.7.4</oprsystem.version>
    <rkylin-rop.version>1.0.2</rkylin-rop.version>
    <maven.version>3.3.9</maven.version>
    <aether.version>1.0.2.v20150114</aether.version>
    <wagon.version>2.10</wagon.version>
    <facerecognition.version>1.0.3</facerecognition.version>
    <PYCredit.version>1.0.1</PYCredit.version>
    <risk-spring-web.version>2.0.0</risk-spring-web.version>
    <risk-core.version>1.3.3</risk-core.version>
    <retrofit2.version>2.1.0</retrofit2.version>
    <resteasy.version>3.0.19.Final</resteasy.version>
    <upaclient.version>1.0</upaclient.version>
    <jsonlib.version>2.4</jsonlib.version>
    <bsApi.version>2.5.1</bsApi.version>
    <activemq.version>5.7.0</activemq.version>
    <activemq-pool.version>5.14.0</activemq-pool.version>
  </properties>

  <dependencies>

    <!--servlet&jsp api begin-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <!--servlet&jsp api end-->
    <!--spring begin-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!--spring end-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
    </dependency>
    <dependency>
      <groupId>com.rkylin.risk</groupId>
      <artifactId>risk-spring-web</artifactId>
      <version>${risk-spring-web.version}</version>
    </dependency>


    <dependency>
      <groupId>com.rkylin.facerecognition</groupId>
      <artifactId>rkylin-facerecognition-api</artifactId>
      <version>${facerecognition.version}</version>
    </dependency>

    <dependency>
      <groupId>com.rkylin.PYCredit</groupId>
      <artifactId>PYCredit-api</artifactId>
      <version>${PYCredit.version}</version>
    </dependency>

    <dependency>
      <groupId>com.unionpayadvisors</groupId>
      <artifactId>upaclient</artifactId>
      <version>${upaclient.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <version>${jsonlib.version}</version>
      <classifier>jdk15</classifier>
    </dependency>


    <dependency>
      <groupId>com.br</groupId>
      <artifactId>bsApi</artifactId>
      <version>${bsApi.version}</version>
    </dependency>


    <dependency>
      <groupId>com.rkylin.risk</groupId>
      <artifactId>risk-core</artifactId>
      <version>${risk-core.version}</version>
    </dependency>

    <dependency>
      <groupId>com.rkylin.risk</groupId>
      <artifactId>risk-order-api</artifactId>
      <version>${risk-order-api.version}</version>
    </dependency>

    <dependency>
      <groupId>com.rkylin.risk</groupId>
      <artifactId>risk-operation-api</artifactId>
      <version>${risk-operation-api.version}</version>
    </dependency>

    <!-- status interface begin -->
    <dependency>
      <groupId>com.rkylin.wheatfield</groupId>
      <artifactId>rsjf-oprsystem-api</artifactId>
      <version>${oprsystem.version}</version>
    </dependency>
    <!-- status interface end -->

    <dependency>
      <groupId>com.rkylin.risk</groupId>
      <artifactId>rop</artifactId>
      <version>${rkylin-rop.version}</version>
    </dependency>

    <!--redis begin-->
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-redis</artifactId>
    </dependency>
    <!--redis end-->


    <!--tools begin-->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <!--tools end-->

    <!--dubbo begin-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>dubbo</artifactId>
    </dependency>

    <!--dubbo注册中心zookeeper-->
    <dependency>
      <groupId>com.101tec</groupId>
      <artifactId>zkclient</artifactId>
    </dependency>

    <!--log begin-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-web</artifactId>
    </dependency>
    <!--slf4j和log4j的绑定-->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
    <!--log end-->

    <!--test begin-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>

    <!--spring test-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <scope>test</scope>
    </dependency>

    <!--assert-->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-guava</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-joda-time</artifactId>
      <scope>test</scope>
    </dependency>

    <!--test end-->

    <!--jackson begin-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-joda</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson.version}</version>
    </dependency>


    <!--jackson end-->

    <!--drools begin-->
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-compiler</artifactId>
      <scope>runtime</scope>
      <!--<exclusions>-->
      <!--<exclusion>-->
      <!--<groupId>com.google.protobuf</groupId>-->
      <!--<artifactId>protobuf-java</artifactId>-->
      <!--</exclusion>-->

      <!--</exclusions>-->
    </dependency>

    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-internal</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-ci</artifactId>
    </dependency>

    <!--kie ci 依赖-->
    <!--maven嵌入到应用 begin-->

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
    </dependency>


    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-connector-basic</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-spi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-transport-wagon</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-transport-file</artifactId>
    </dependency>
    <dependency>
      <groupId>org.eclipse.aether</groupId>
      <artifactId>aether-transport-http</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
    </dependency>

    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
    </dependency>


    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
    </dependency>
    <!--maven嵌入到应用 end-->


    <!--kie-ci依赖结束-->


    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mvel</groupId>
      <artifactId>mvel2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
    </dependency>

    <!--rule default compiler-->
    <dependency>
      <groupId>org.eclipse.jdt.core.compiler</groupId>
      <artifactId>ecj</artifactId>
    </dependency>
    <!--drools end-->

    <dependency>
      <groupId>com.rkylin.risk</groupId>
      <artifactId>risk-kie-server</artifactId>
      <version>${risk-kie-server.version}</version>
    </dependency>


    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <version>${resteasy.version}</version>
    </dependency>


    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <version>${resteasy.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-spring</artifactId>
      <version>${resteasy.version}</version>
    </dependency>

    <!--<dependency>-->
      <!--<groupId>org.jboss.resteasy</groupId>-->
      <!--<artifactId>resteasy-jaxrs-testsuite</artifactId>-->
      <!--<version>${resteasy.version}</version>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-core</artifactId>
      <version>${activemq.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-pool</artifactId>
      <version>${activemq-pool.version}</version>
    </dependency>


  </dependencies>

  <build>
    <finalName>risk-service</finalName>
    <filters>
      <filter>profiles/${build.profile}.properties</filter>
    </filters>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <filtering>true</filtering>
        <directory>src/test/resources</directory>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <warName>risk-service</warName>
          <!-- 激活spring profile -->
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>src/main/webapp</directory>
              <includes>
                <include>WEB-INF/web.xml</include>
              </includes>
            </resource>
          </webResources>
          <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
          <warSourceDirectory>src/main/webapp</warSourceDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>alfa</id>
      <properties>
        <build.profile>alfa</build.profile>
      </properties>
    </profile>
    <profile>
      <id>berta</id>
      <properties>
        <build.profile>berta</build.profile>
      </properties>
    </profile>
    <profile>
      <id>develop</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <build.profile>develop</build.profile>
        <sonar.language>java</sonar.language>
        <sonar.host.url>http://123.56.85.89:9000</sonar.host.url>
        <sonar.login>admin</sonar.login>
        <sonar.password>admin</sonar.password>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>3.1.1</version>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>product</id>
      <properties>
        <build.profile>product</build.profile>
      </properties>
    </profile>
    <profile>
      <id>test</id>
      <properties>
        <build.profile>test</build.profile>
      </properties>
    </profile>
    <profile>
      <id>uat</id>
      <properties>
        <build.profile>uat</build.profile>
      </properties>
    </profile>
    <profile>
      <id>ntest</id>
      <properties>
        <build.profile>ntest</build.profile>
      </properties>
    </profile>
    <profile>
      <id>atest</id>
      <properties>
        <build.profile>atest</build.profile>
      </properties>
    </profile>
    <profile>
      <id>performance</id>
      <properties>
        <build.profile>performance</build.profile>
      </properties>
    </profile>
  </profiles>
</project>
