assert JavaVersion.current().java7Compatible:
        "At least Java 7 is required, current JVM is ${JavaVersion.current()}"

buildscript {
  repositories {
    maven {
      url "http://121.40.68.238:8081/nexus/content/repositories/public"
    }
    maven { url 'http://repo.spring.io/plugins-release' }
    mavenCentral()
    mavenLocal()
  }

  dependencies {
    classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
  }
}


ext {
  lombokVersion = '1.16.8'
  jodaTimeVersion = '2.8.2'
  jacksonVersion = '2.6.5'
  springVersion = '4.2.5.RELEASE'

  guavaVersion = '18.0'

  slf4jVersion = '1.7.21'
  log4jVersion = '2.6.1'



  junitVersion = '4.12'
  mockitoVersion = '1.10.19'
  jsonpathVersion = '2.0.0'
  assertjVersion = '2.4.1'
  gradleScriptDir = "${rootProject.projectDir}/gradle"
  gradleFindbugsVersion = '3.0.1'
}


subprojects {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'propdeps'
  apply plugin: 'propdeps-idea'
  apply from: "${gradleScriptDir}/publish-maven.gradle"
  apply plugin: 'findbugs'


  group = 'com.rkylin.risk.credit'

  sourceCompatibility = 1.7
  targetCompatibility = 1.7

  repositories {
    maven { url "http://121.40.68.238:8081/nexus/content/repositories/public" }
    mavenCentral()
  }

  tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
  }

  configurations {
    all {
      exclude module: 'commons-logging'
      resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
  }


  findbugs {
    ignoreFailures = true
    toolVersion = gradleFindbugsVersion
    sourceSets = [sourceSets.main]
    effort = "max"
  }
  tasks.withType(org.gradle.api.plugins.quality.FindBugs) {
    reports {
      xml.enabled = false
      xml.withMessages = true
      html.enabled = !xml.isEnabled()
    }
  }
}

